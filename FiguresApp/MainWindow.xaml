<Window x:Class="FiguresApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FiguresApp"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        mc:Ignorable="d"
        Title="Figures app" 
        SizeToContent="WidthAndHeight"
        d:DataContext="{d:DesignInstance local:MainViewModel }" ResizeMode="CanMinimize">
    <Window.Resources>
        <ObjectDataProvider x:Key="FigureTypesCollection" MethodName="GetValues"
                            ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:FigureTypes"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <Style TargetType="TextBox">
            <Setter Property="Width" Value="30"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <EventSetter Event="PreviewTextInput" Handler="TextBox_PreviewTextInput"/>
        </Style>

        <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ColorPickerSliderStyle" TargetType="Slider">
            <Setter Property="Background" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Slider">
                                <Grid>
                                    <Border Height="15" Margin="4,0" BorderBrush="Silver" BorderThickness="1">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,1" EndPoint="1,1">
                                                <GradientStop Color="#ff0000" Offset="0"/>
                                                <GradientStop Color="#ffff00" Offset="0.2"/>
                                                <GradientStop Color="#00ff00" Offset="0.31"/>
                                                <GradientStop Color="#00ffff" Offset="0.46"/>
                                                <GradientStop Color="#0000ff" Offset="0.60"/>
                                                <GradientStop Color="#ff00ff" Offset="0.8"/>
                                                <GradientStop Color="#ff0000" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                    <Track x:Name="PART_Track" VerticalAlignment="Top">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb x:Name="Thumb">
                                                <Thumb.Style>
                                                    <Style TargetType="Thumb">
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="Foreground" Value="#FFFFFF"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                    <Path Cursor="Hand" Fill="{TemplateBinding Foreground}" Data="M0,0 10,0 5,5 0,0 Z" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" />
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Foreground" Value="DodgerBlue"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Thumb.Style>
                                            </Thumb>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ColorPickerItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border Width="24" Height="24" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="DodgerBlue"/>
                                <Setter Property="BorderThickness" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TglBtnColorPicker" TargetType="ToggleButton">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{Binding SelectedColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:ColorPicker}}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>

        <Style TargetType="{x:Type local:ColorPicker}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Width" Value="10"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{Binding SelectedColor}"/>
            <Setter Property="SelectedColor" Value="{Binding SelectedColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:ColorPicker}">
                        <Grid Background="{TemplateBinding Background}">
                            <ToggleButton Height="{TemplateBinding Height}" Cursor="Hand" x:Name="tglColorPicker" BorderBrush="{TemplateBinding BorderBrush}" Style="{StaticResource TglBtnColorPicker}" BorderThickness="{TemplateBinding BorderThickness}"/>
                            <Popup StaysOpen="False" PopupAnimation="Slide" IsOpen="{Binding ElementName=tglColorPicker, Path=IsChecked, Mode=TwoWay}" AllowsTransparency="True">
                                <Border Background="Gray" BorderBrush="DarkGray" BorderThickness="2">
                                    <Grid Width="270">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="10"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="10"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="10"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="10"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="10"/>
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Grid.Column="1" Grid.Row="1" Background="DarkGray">
                                            <TextBlock Text="Standard colors" Margin="5 1" />
                                            <ListBox Margin="0 5" SelectedIndex="0"
                                                 SelectedItem="{Binding DefaultColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:ColorPicker}}" 
                                                 BorderThickness="0" Width="250" ItemsSource="{TemplateBinding DefaultColors}" 
                                                 ItemContainerStyle="{StaticResource ColorPickerItemStyle}" Background="Transparent">
                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <UniformGrid Rows="5" Columns="8"/>
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Border Background="{Binding}"/>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                            </ListBox>
                                        </StackPanel>
                                        <StackPanel Grid.Column="1" Grid.Row="3" Background="DarkGray">
                                            <TextBlock Text="Palette" Margin="5, 1"/>
                                            <Slider Minimum="0" Maximum="1535" 
                                                Value="{Binding UserCustomValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:ColorPicker}}" 
                                                Style="{StaticResource ColorPickerSliderStyle}" Margin="0,5"/>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="tglColorPicker" Value="LightGray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <local:BindingProxy x:Key="Proxy" Data="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Window}}" />
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="400"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="90"/>
            <RowDefinition Height="10"/>
            <RowDefinition Height="400"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Column="0" Grid.Row="0" Margin="3,5,0,0">
            <StackPanel Orientation="Horizontal">
                <ComboBox ItemsSource="{Binding Source={StaticResource FigureTypesCollection}}" SelectedItem="{Binding SelectedType}" Width="100"/>
                <TextBlock Text="Color: " Margin="3,0,0,0" VerticalAlignment="Center"/>
                <local:ColorPicker SelectedColor="{Binding SelectedColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="3,0,0,0"  Width="50"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                <TextBlock Text="Left: " VerticalAlignment="Center"/>
                <TextBox Text="{Binding Left, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Text="Top: " Margin="3,0,0,0" VerticalAlignment="Center"/>
                <TextBox Text="{Binding Top, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Text="Width: " Margin="3,0,0,0" VerticalAlignment="Center"/>
                <TextBox Text="{Binding Width, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Text="Height: " Visibility="{Binding SelectedType, Converter={StaticResource BoolToVisibilityConverter}}" Margin="3,0,0,0"/>
                <TextBox Text="{Binding Height, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding SelectedType, UpdateSourceTrigger=PropertyChanged,  Converter={StaticResource BoolToVisibilityConverter}}"/>
            </StackPanel>
            <StackPanel  Margin="0,15,0,0" HorizontalAlignment="Center" Orientation="Horizontal">
                <Button Content="Add" Command="{Binding AddCommand}" Width="100"/>
                <Button Content="Clear" Command="{Binding ClearCommand}" Width="100" Margin="10,0,0,0"/>
            </StackPanel>
        </StackPanel>
        <DataGrid Grid.Column="0" Grid.Row="2" ItemsSource="{Binding FiguresCollection}" AutoGenerateColumns="False" IsReadOnly="True">
            <DataGrid.Resources>
                <Style TargetType="DataGridRow">
                    <Setter Property="Focusable" Value="True"/>
                    <Setter Property="ContextMenu">
                        <Setter.Value>
                            <ContextMenu Width="130">
                                <MenuItem Header="Delete" Command="{Binding Data.DeleteCommand, Source={StaticResource Proxy}}" CommandParameter="{Binding}"/>
                            </ContextMenu>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Type" Binding="{Binding Type}"/>
                <DataGridTextColumn Header="Color" Binding="{Binding Color}"/>
                <DataGridTextColumn Header="Left" Binding="{Binding Left}"/>
                <DataGridTextColumn Header="Top" Binding="{Binding Top}"/>
            </DataGrid.Columns>
        </DataGrid>
        <ItemsControl Grid.Row="0" Grid.Column="2" Grid.RowSpan="3" ItemsSource="{Binding FiguresCollection}" BorderBrush="Black" BorderThickness="1">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Path Data="{Binding Data}" Fill="{Binding Color}"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</Window>
